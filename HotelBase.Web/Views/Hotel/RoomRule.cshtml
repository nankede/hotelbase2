<div ng-app="myApp" ng-controller="myCtrl" ng-cloak>
    <div>
        <div class="lay-row">
            <div class="lay-form-item lay-must">
                <div class="lay-form-item-caption">
                    <label>政策名称</label>
                </div>
                <div class="lay-form-item-control">
                    <input class="lay-input  long-input" ng-model="m.HRRName" />
                </div>
            </div>
        </div>
        <div class="lay-row">
            <div class="lay-form-item ">
                <div class="lay-form-item-caption ">
                    <label>选择来源</label>
                </div>
                <div class="lay-form-item-control">
                    <select class="lay-select select-area" placeholder="请选择来源" ng-init="m.HRRSourceId=0" ng-model="m.HRRSourceId" ng-init="m.HRRSourceId=0" ng-options="item.Code as item. Name for item in SourceList"></select>
                </div>
            </div>
        </div>
        <div class="lay-row">
            <div class="lay-form-item ">
                <div class="lay-form-item-caption ">
                    <label>选择供应商</label>
                </div>
                <div class="lay-form-item-control">
                    <div id="esSupplier"></div>
                </div>
            </div>
        </div>
        <div class="lay-row">
            <div class="lay-form-item ">
                <div class="lay-form-item-caption ">
                    <label>早餐政策</label>
                </div>
                <div class="lay-form-item-control">
                    <select class="lay-select select-area" placeholder="请选择早餐政策" ng-model="m.HRRBreakfastRule" ng-init="m.HRRBreakfastRule=0" ng-options="item.Code as item. Name for item in BreakfastList"></select>
                </div>
            </div>
        </div>
        <div class="lay-row">
            <div class="lay-form-item ">
                <div class="lay-form-item-caption ">
                    <label>取消政策</label>
                </div>
                <div class="lay-form-item-control">
                    <select class="lay-select select-area" placeholder="请选择取消政策" ng-model="m.HRRCancelRule" ng-init="m.HRRCancelRule=0" ng-options="item.Code as item. Name for item in CancelList"></select>
                </div>
            </div>
        </div>
    </div>

    <div class="lay-form-foot">
        <input type="button" class="lay-btn lay-btn-primary" value="保存" ng-click="Save()">
    </div>
</div>
<input id="hfId" type="hidden" value="@ViewBag.Id" />
<input id="hfHotelId" type="hidden" value="@ViewBag.HotelId" />
<input id="hfRoomId" type="hidden" value="@ViewBag.RoomId" />
@section foot{
    <script>

        var mobileReg = /^1(3|4|5|7|8|9)\d{9}$/;
        var telReg = /^(\d{3,4}-?)?\d{7,9}$/;
        var emailReg = /\w+([-+.]\w+)*@@\w+([-.]\w+)*\.\w+([-.]\w+)*/;
        var app = angular.module('myApp', []);
        app.controller('myCtrl', function ($scope) {
            $scope.Source = [{ Code: 0, Name: '请选择' }];
            $scope.config = {
                detailUrl: "/hotel/getroomruledetail/",
                saveUrl: "/hotel/saveroomrule/",
                supplierUrl: "/Supplier/GetSupplierList/",
                //sourceId = 10101 & name=A
            };
            $scope.Id = $('#hfId').val();
            $scope.HotelId = $('#hfHotelId').val();
            $scope.RoomId = $('#hfRoomId').val();
            $(function () {
                $scope.pageInit();
            });
            //初始化
            $scope.pageInit = function () {
                $scope.dicInit();
                $scope.initSelect();
                if ($scope.Id > 0) {
                    $scope.getDetail();
                }
                else {
                    $scope.m = {
                        HIId: $scope.HotelId,
                        HRId: $scope.RoomId,
                        HRRBreakfastRuleName: '',
                        HRRCancelRuleName: '',
                        HRRSourceName: '',
                        HRRSupplierName: ''
                    };
                }
            }
            //字典初始化
            $scope.dicInit = function () {
                //早餐
                Untitl.GetDicList(301, function (data) {
                    $scope.BreakfastList = data;
                    $scope.$apply();
                });
                //取消
                Untitl.GetDicList(302, function (data) {
                    $scope.CancelList = data;
                    $scope.$apply();
                });
                //供应商来源
                Untitl.GetDicList(101, function (data) {
                    $scope.SourceList = data;
                    $scope.$apply();
                });
            }

            //初始化
            $scope.initSelect = function () {
                $('#esSupplier').eSearch2({
                    placeholder: '请输入供应商名称查询',
                    searchSource: $scope.config.supplierUrl,
                    searchKey: 'name',
                    resultItem: {
                        value: 'Code',
                        text: 'Name'
                    },
                    onBeforeSend: function (ajaxSendData) {
                        //这里的departmentId就是动态变化的
                        //ajaxSendData.name = encodeURIComponent(ajaxSendData.name);
                        if (!ajaxSendData.name || ajaxSendData.name.length <= 0) {
                            return false;
                        }
                        ajaxSendData.sourceId = $scope.m.HRRSourceId || 0;
                        return ajaxSendData;
                    },
                    onSelected: function () {
                        $scope.m.HRRSupplierId = this.value;
                        $scope.m.HRRSupplierName = this.text;
                        $scope.$apply();
                        console.log(`我是选中的value:${this.value},我是选中的text:${this.text}`);
                        //所有的回调里面的this值都放了很多有用的东西
                        //比如 你选中的 value值，选中的 text值
                        //alert(`我是选中的value:${this.value},我是选中的text:${this.text}`)
                    }
                });

            }


            //查询供应商
            $scope.getSupplierList = function () {
                $.ajax({
                    url: $scope.config.supplierUrl + "?sourceId=" + $scope.m.HRRSourceId + "&name=",
                    type: 'get',
                    dataType: "json",
                    timeout: 20000,
                    success: function (data) {
                        if (data != null && data.Id > 0) {
                            $scope.m = data;
                            if ($scope.m.HRRSupplierId && $scope.m.HRRSupplierId > 0) {
                                var d = { value: $scope.m.HRRSupplierId, text: $scope.m.HRRSupplierName };
                                $('#esSupplier').eSearch2.setDefaults('#esSupplier', d);
                            }
                        }
                        $scope.$apply();
                    },
                    error: function () {
                        console.log("err-getDetail");
                    },
                    complete: function () {

                    }
                });
            }

            //赋值
            $scope.DicValueInit = function (id, list) {
                var name = "--";
                if (list) {
                    $.each(list, function (index, item) {
                        if (item.Code == id)
                            name = item.Name;
                    });
                }
                return name;
            }

            //详情
            $scope.getDetail = function () {
                eLoading.show();
                $.ajax({
                    url: $scope.config.detailUrl + "?id=" + $scope.Id,
                    type: 'get',
                    dataType: "json",
                    timeout: 20000,
                    success: function (data) {
                        if (data != null && data.Id > 0) {
                            $scope.m = data;
                        }
                        else {
                            eMsg({
                                timer: 2000,
                                text: '查询失败，请稍后重试！'
                            });
                        }
                        $scope.$apply();
                    },
                    error: function () {
                        console.log("err-getDetail");
                    },
                    complete: function () {
                        eLoading.hide();
                    }
                });
            }

            //保存
            $scope.Save = function () {
                var c = $scope.checkData();
                $scope.m.HRRBreakfastRuleName = $scope.DicValueInit($scope.m.HRRBreakfastRule, $scope.BreakfastList);
                $scope.m.HRRCancelRuleName = $scope.DicValueInit($scope.m.HRRCancelRule, $scope.CancelList);
                $scope.m.HRRSourceName = $scope.DicValueInit($scope.m.HRRSourceId, $scope.SourceList);

                if (!c) return;
                eLoading.show();
                Untitl.Post($scope.config.saveUrl, $scope.m, function (data) {
                    if (data != null && data.IsSuccess > 0) {
                        $scope.m.Id = data.AddId;
                        eMsg({
                            timer: 2000,
                            text: '操作成功，正在自动关闭页面！'
                        });
                        //关闭页面
                        setTimeout(function () { $(parent.document).find('#btnSearch').click(); }, 1000);
                    }
                    else {
                        var msg = data ? data.Msg : "";
                        eMsg({
                            timer: 2000,
                            text: '操作失败,' + msg
                        });
                    }
                    $scope.$apply();
                },
                    function () {
                        eLoading.hide();
                    });
            }

            //数据验证
            $scope.checkData = function () {
                if ($scope.m.HRRName.length <= 0) {
                    eMsg({
                        timer: 2000,
                        text: '名称不能为空！'
                    });
                    return false;
                }
                return true;
            }
        });
    </script>
}